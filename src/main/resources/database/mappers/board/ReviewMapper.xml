<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.c.illy.review.ReviewRepository">

	<!--전체 리뷰 조회-->
	<select id="getReviewList" parameterType="Pager" resultMap="reviewResultAll">
		SELECT R.*,RF.*,C.*,P.*,M.username FROM review R
		LEFT JOIN reviewfile RF
		ON(R.review_id=RF.review_id)
		JOIN cart C
		ON(R.cart_id=C.cart_id)
		JOIN product P
		ON(C.product_id=P.product_id)
		JOIN member M
		ON(C.member_id=M.member_id)
		WHERE P.product_name LIKE CONCAT('%',#{search},'%')
		AND P.product_categoryCode LIKE CONCAT (#{code},'%')
		GROUP BY R.review_id
		ORDER BY 
		<choose>
			<when test="kind=='review_star'">R.review_star</when>
			<otherwise>R.review_id</otherwise>
		</choose>
		DESC limit #{startRow},#{perPage}
	</select>
	
	<!-- 리뷰리스트 토탈카운트 -->
	<select id="reviewTotalCount" parameterType="Pager" resultType="Long">
		SELECT count(R.review_id) FROM review R
		LEFT JOIN cart C
		ON(R.cart_id=C.cart_id)
		JOIN product P
		ON(C.product_id=P.product_id)
		WHERE P.product_name LIKE CONCAT('%',#{search},'%')
		AND product_categoryCode LIKE CONCAT (#{code},'%')
	</select>
	
	
	<resultMap type="ReviewVO" id="reviewResultAll">
		<id column="review_id" property="review_id" />
			<result column="cart_id" property="cart_id"/>	
			<result column="review_star" property="review_star"/>
			<result column="review_title" property="review_title"/>
			<result column="review_contents" property="review_contents"/>
			<result column="review_regDate" property="review_regDate"/>
		
		<collection property="fileList" ofType="ReviewFileVO" javaType="List">
			<id column="reviewFile_id" property="reviewFile_id"/>
			<result column="reviewFile_name" property="reviewFile_name"/>
			<result column="reviewFile_oriName" property="reviewFile_oriName"/>
		</collection>
		<collection property="cartVO" javaType="CartVO">
			<id column="cart_id" property="cart_id"/>
			<result column="product_id" property="product_id"/>
			<result column="member_id" property="member_id"/>
			<result column="cart_cnt" property="cart_cnt"/>
			<result column="cart_state" property="cart_state"/>
			<result column="payment_id" property="payment_id"/>
			<result column="cart_review_state" property="cart_review_state"/>
		</collection>
		<collection property="memberVO" javaType="MemberVO">
			<id column="member_id" property="member_id" />
			<result column="username" property="username"/>
		</collection>
		<collection property="productVO" javaType="ProductVO">
			<id column="product_id" property="product_id"/>
			<result column="product_name" property="product_name"/>
			<result column="product_price" property="product_price"/>
			<result column="product_detail" property="product_detail"/>
			<result column="product_categoryCode" property="product_categoryCode"/>
			<result column="product_regDate" property="product_regDate"/>
			<result column="product_manufacturer" property="product_manufacturer"/>
			<result column="product_origin" property="product_origin"/>
			<result column="product_importer" property="product_importer"/>
			<result column="product_state" property="product_state"/>
		</collection>
	</resultMap>

	<!--리뷰 작성-->
	<insert id="reviewInsert" parameterType="ReviewVO" useGeneratedKeys="true" keyProperty="review_id">
		INSERT INTO review(review_id,review_title,review_contents,review_regDate,cart_id,review_star)
		VALUES(0,#{review_title},#{review_contents},sysdate(),#{cart_id},#{review_star})
	</insert>
	
	<!-- 리뷰 하나 조회 해오기 -->
	<select id="reviewSelectOne" parameterType="Integer" resultMap="reviewSelectOne">
		select R.*,RF.* from review R left join reviewfile RF using(review_id) WHERE cart_id=#{cart_id} GROUP BY R.review_id
	</select>
	
	<!--리뷰 하나의 파일들 조회해오기-->
	<select id="reviewSelectFile" parameterType="Integer" resultType="ReviewFileVO">
		SELECT * FROM reviewfile WHERE review_id=#{review_id}
	</select>
	
	<resultMap type="ReviewVO" id="reviewSelectOne">
		<id column="review_id" property="review_id" />
			<result column="cart_id" property="cart_id"/>	
			<result column="review_star" property="review_star"/>
			<result column="review_title" property="review_title"/>
			<result column="review_contents" property="review_contents"/>
			<result column="review_regDate" property="review_regDate"/>
		
		<collection property="fileList" ofType="ReviewFileVO" javaType="List">
			<id column="reviewFile_id" property="reviewFile_id"/>
			<result column="reviewFile_name" property="reviewFile_name"/>
			<result column="reviewFile_oriName" property="reviewFile_oriName"/>
		</collection>
	</resultMap>
	
	
	<!--리뷰 파일업로드-->
	<insert id="reviewFileInsert" parameterType="ReviewFileVO">
		INSERT INTO reviewfile(reviewFile_id,reviewFile_name,reviewFile_oriName,review_id)
		VALUES(0,#{reviewFile_name},#{reviewFile_oriName},#{review_id})
	</insert>
	
	<!-- 리뷰 수정하기 -->
	<update id="reviewUpdate" parameterType="ReviewVO">
		UPDATE review SET review_title=#{review_title},review_contents=#{review_contents},review_star=#{review_star} 
		WHERE review_id=#{review_id}
	</update>
	
	<!-- 리뷰 삭제하기 -->
	<delete id="reviewDelete" parameterType="ReviewVO">
		DELETE FROM review WHERE review_id=#{review_id}
	</delete>

</mapper>