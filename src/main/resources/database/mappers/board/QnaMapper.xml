<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.c.illy.qna.QnaRepository">

<!-- QNA리스트 불러오기  -->
<select id="getQnaList" parameterType="Map" resultType="QnaVO">
	SELECT * FROM qna 
	WHERE member_id=#{qnaVO.member_id}
	<if test="qnaVO.start_date != null">
		AND qna_regDate BETWEEN #{qnaVO.start_date} AND #{qnaVO.end_date}		
	</if>
	ORDER BY qna_id DESC limit #{pager.startRow},#{pager.perPage}
</select>

<!-- totalCount 불러오기  -->
<select id="getTotalCount" parameterType="Map" resultType="Long">
	SELECT COUNT(qna_id) FROM qna
	WHERE member_id =#{qnaVO.member_id}
	<if test="qnaVO.start_date != null">
		AND qna_regDate BETWEEN #{qnaVO.start_date} AND #{qnaVO.end_date}		
	</if>
</select>

<!-- Qna 추가할때 상품 다중select -->
<select id="getQnaProduct" parameterType="Pager" resultMap="selectPrdResult">
SELECT P.*,PF.* FROM 
	product P
		JOIN 
	productfile PF 
	USING(product_id)
		WHERE
		<choose>
			<when test="kind=='product_name'">P.product_name</when>
			<otherwise>P.product_id</otherwise>
		</choose>
		LIKE CONCAT ('%',#{search},'%')
		AND P.product_categoryCode LIKE CONCAT (#{code},'%')
	 GROUP BY P.product_id ORDER BY P.product_id DESC limit #{startRow},#{perPage} 
</select>

<!-- product list totalCount 불러오기  -->
<select id="getPrdTotalCount" parameterType="Pager" resultType="Long">
	SELECT COUNT(product_id) FROM product
	WHERE
	<choose>
		<when test="kind=='product_name'">product_name</when>
		<otherwise>product_id</otherwise>
	</choose>
	LIKE CONCAT ('%',#{search},'%')
	AND product_categoryCode LIKE CONCAT (#{code},'%')
</select>

<resultMap type="ProductVO" id="selectPrdResult">
	<id column="product_id" property="product_id"/>
	<result column="product_name" property="product_name"/>
	<result column="product_price" property="product_price"/>
	<result column="product_detail" property="product_detail"/>
	<result column="product_categoryCode" property="product_categoryCode"/>
	<result column="product_regDate" property="product_regDate" />
	<result column="product_manufacturer" property="product_manufacturer" />
	<result column="product_origin" property="product_origin" />
	<result column="product_importer" property="product_importer" />
	<collection property="productFileVOs" javaType="List" ofType="ProductFileVO">
		<id column="productFile_id" property="productFile_id" />
		<result column="productFile_name" property="productFile_name" />
		<result column="productFile_oriName" property="productFile_oriName" />
	</collection>
</resultMap>


<!--Qna 글 하나 조회하기 -->
<select id="qnaSelectOne" parameterType="QnaVO" resultMap="selectResult">
	SELECT Q.*,QF.* FROM 
	qna Q
		LEFT JOIN
	qnafile QF			
	ON(Q.qna_id=QF.qna_id)
	WHERE Q.qna_id=#{qna_id} 
</select> 

<resultMap type="QnaVO" id="selectResult">
	<id column="qna_id" property="qna_id"/>
	<result column="qna_title" property="qna_title"/>
	<result column="qna_contents" property="qna_contents"/>
	<result column="qna_regDate" property="qna_regDate"/>
	<result column="qna_type" property="qna_type"/>
	<result column="qna_state" property="qna_state" />
	<result column="qna_phone" property="qna_phone" />
	<result column="product_id" property="product_id" />
	<result column="member_id" property="member_id" />
	<result column="qna_answer" property="qna_answer" />
	<result column="qna_answer_regDate" property="qna_answer_regDate" />
	<collection property="fileList" javaType="List" ofType="QnaFileVO">
		<id column="qnaFile_id" property="qnaFile_id" />
		<result column="qnaFile_name" property="qnaFile_name" />
		<result column="qnaFile_oriName" property="qnaFile_oriName" />
	</collection>
</resultMap>

<!-- Qna 추가하기 -->
<insert id="qnaInsert" parameterType="QnaVO">
	INSERT INTO qna(qna_id,qna_type,qna_title,qna_contents,product_id,qna_state,qna_regDate,qna_phone,member_id)
	VALUES(0,#{qna_type},#{qna_title},#{qna_contents},#{product_id},0,sysdate(),#{qna_phone},#{member_id})
</insert>

<!-- Qna 파일 업로드  -->
<insert id="qnaFileInsert" parameterType="QnaFileVO">
	INSERT INTO qnafile(qnaFile_id,qnaFile_name,qnaFile_oriName,qna_id)
	VALUES(0,#{qnaFile_name},#{qnaFile_oriName},#{qna_id})
</insert>

<!-- Qna 파일다운  -->
<select id="fileDown" parameterType="QnaFileVO" resultType="QnaFileVO">
	SELECT * FROM qnafile WHERE qnaFile_id=#{qnaFile_id}
</select>

<!--QNA 업데이트-->
<update id="qnaUpdate" parameterType="QnaVO">
	UPDATE qna SET qna_title=#{qna_title},product_id=#{product_id},qna_contents=#{qna_contents},qna_type=#{qna_type} 
	WHERE qna_id=#{qna_id}
</update>

 <!--Qna 삭제하기 -->
<delete id="qnaDelete" parameterType="QnaVO">
	DELETE FROM qna WHERE qna_id=#{qna_id}
</delete>


<!--어드민 페이지 답변 -->

<!-- 어드민 페이지 qna list 불러오기 -->
<select id="getAdQnaList" parameterType="Pager" resultType="QnaVO">
	SELECT * FROM qna 
		WHERE
		<choose>
			<when test="kind=='qna_title'">qna_title</when>
			<otherwise>member_id</otherwise>
		</choose>
		LIKE CONCAT ('%',#{search},'%')
	ORDER BY qna_state, qna_id DESC limit #{startRow},#{perPage}
</select>

<!-- 어드민 qna list totalCount 불러오기  -->
<select id="getAdTotalCount" parameterType="Pager" resultType="Long">
	SELECT COUNT(qna_id) FROM qna 
	WHERE 
	<choose>
		<when test="kind=='qna_title'">qna_title</when>
		<otherwise>member_id</otherwise>
	</choose>
	LIKE CONCAT ('%',#{search},'%')
</select>

<!--어드민 qna 답변 업데이트하기  -->
<update id="writeAnswer" parameterType="QnaVO">
	UPDATE qna SET qna_answer=#{qna_answer},qna_answer_regDate=sysdate(),qna_state=1
	WHERE qna_id=#{qna_id}
</update>

<!--답변 취소하기-->
<update id="prevAnswer" parameterType="QnaVO">
	UPDATE qna SET qna_answer=null,qna_answer_regDate=null,qna_state=0
	WHERE qna_id=#{qna_id}
</update>




</mapper>