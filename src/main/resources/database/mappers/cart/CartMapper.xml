<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.c.illy.cart.CartRepository">
	<insert id="setCart" parameterType="CartVO">
		insert into cart (cart_id, member_id, product_id, cart_cnt, cart_state)
		values (null, #{member_id}, #{product_id}, #{cart_cnt}, 'checked')
	</insert> <!-- 장바구니 담기 -->
	
	<insert id="setPaymentCart" parameterType="CartVO">
		insert into cart (cart_id, member_id, product_id, cart_cnt, cart_state)
		values (null, #{member_id}, #{product_id}, #{cart_cnt}, 'direct')
	</insert> <!-- 바로구매 담기 -->

	<select id="getNormalBasket" resultType="CartProductVO" parameterType="MemberVO">
		select C.*, P.*, PF.* from cart C
		join product P
			on C.product_id = P.product_id
        join productfile PF
        	on C.product_id = PF.product_id
		where C.member_id=#{member_id} and
				(C.cart_state = 'checked' or C.cart_state = 'unChecked')
	</select> <!-- 일반배송 장바구니 리스트 -->
	
  	<select id="getCartListCheck" resultType="CartProductVO" parameterType="MemberVO">
  		select C.*, P.*, PF.* from cart C
		join product P
			on C.product_id = P.product_id
        join productfile PF
        	on C.product_id = PF.product_id
		where C.member_id=#{member_id} and
			  C.cart_state='checked'
  	</select> <!-- 선택한 장바구니 리스트 --> <!-- 선택상품 주문 때 이용 -->
  	
  	<select id="getDirectPayment" resultType="CartProductVO" parameterType="MemberVO">
  		select C.*, P.*, PF.* from cart C
		join product P
			on C.product_id = P.product_id
        join productfile PF
        	on C.product_id = PF.product_id
		where C.member_id=#{member_id} and
			  C.cart_state='direct'
  	</select> <!-- 바로구매 통한 구매상품 리스트 출력 -->
  	
  	<select id="getPaymentCart" resultType="CartProductVO" parameterType="PaymentVO">
  		select * from cart C
		join product P
		on C.product_id = P.product_id
		where C.payment_id=#{payment_id}
  	</select> <!-- 결제완료 상품 List 출력 -->  	
  	
  	<resultMap type="PaymentVO" id="getMyPageOrderResult">
		<id column="payment_id" property="payment_id"/>
		<result column="member_id" property="member_id" />
		<result column="address_id" property="address_id"/>
		<result column="payment_comment" property="payment_comment"/>
		<result column="payment_type" property="payment_type"/>
		<result column="payment_date" property="payment_date"/>
		<result column="payment_name" property="payment_name"/>
		<result column="payment_delivery" property="payment_delivery"/>
		<result column="payment_email" property="payment_email"/>
		<result column="payment_phone" property="payment_phone"/>
		<result column="payment_product_total" property="payment_product_total"/>
		<result column="payment_use_point" property="payment_use_point"/>
		<result column="payment_use_coupon" property="payment_use_coupon"/>
		<result column="payment_add_point" property="payment_add_point"/>
		<result column="payment_total_discount" property="payment_total_discount"/>
		<result column="payment_total" property="payment_total"/>
		<collection property="carts" javaType="List" ofType="CartProductVO">
			<id column="cart_id" property="cart_id"/>
			<result column="member_id" property="member_id"/>
			<result column="product_id" property="product_id"/>
			<result column="payment_id" property="payment_id"/>
			<result column="product_name" property="product_name"/>
			<result column="productFile_name" property="productFile_name"/>
			<result column="product_price" property="product_price"/>
			<result column="cart_state" property="cart_state"/>
			<result column="cart_cnt" property="cart_cnt"/>
			<result column="product_categoryCode" property="product_categoryCode"/>
		</collection>
		<collection property="addressVO" javaType="AddressVO">
			<id column="address_id" property="address_id"/>
			<result column="address_name" property="address_name"/>
			<result column="address_recipient_name" property="address_recipient_name"/>
			<result column="address_recipient_phone" property="address_recipient_phone"/>
			<result column="address" property="address"/>
			<result column="address_postcode" property="address_postcode"/>
			<result column="main_address" property="main_address"/>
			<result column="address_reference" property="address_reference"/>
			<result column="address_detail" property="address_detail"/>
			<result column="address_default" property="address_default"/>
			<result column="address_myAddress" property="address_myAddress"/>
		</collection>
	</resultMap>
  	
 	<select id="getMyPageOrderPager" parameterType="HashMap" resultMap="getMyPageOrderResult">
	  	select * from cart C
			join product P
			on C.product_id = P.product_id
			join productFile PF
			on P.product_id=PF.product_id
			join payment PM
	        on C.payment_id = PM.payment_id
	        join address A
        	on PM.address_id=A.address_id
				where PM.member_id=#{payment.member_id}
				and
				    DATE_FORMAT(PM.payment_date, '%Y-%m-%d') between #{payment.start_date} and #{payment.end_date}
				<if test="cart.cart_state == 'cancel'"> <!-- 취소/반품 list 조회 조건 -->
					and C.cart_state = 'cancel'
				</if>
				<if test="cart.cart_state == 'refund'"> <!-- 환불 list 조회 조건 -->
					and C.cart_state = 'refund'
				</if>
				order by PM.payment_date desc limit #{pager.startRow},#{pager.perPage}
  	</select> <!-- 주문/배송 list 조회 (pager처리 위함) -->
  	
  	<select id="getMyPageOrderCount" parameterType="HashMap" resultType="Long">
  		select count(C.cart_id) from cart C
			join product P
			on C.product_id = P.product_id
			join productFile PF
			on P.product_id=PF.product_id
			join payment PM
	        on C.payment_id = PM.payment_id
	        join address A
        	on PM.address_id=A.address_id
        		where PM.member_id=#{payment.member_id}
        		and
				     DATE_FORMAT(PM.payment_date, '%Y-%m-%d') between #{payment.start_date} and #{payment.end_date}
				<if test="cart.cart_state == 'cancel'"> <!-- 취소/반품 list 조회 조건 -->
					and C.cart_state = 'cancel'
				</if>
        		<if test="cart.cart_state == 'refund'"> <!-- 환불 list 조회 조건 -->
					and C.cart_state = 'refund'
				</if>
  	</select> <!-- 주문/배송 list 조회 count(pager처리 위함) -->
  	
  	<select id="getMyPageOrderDetail" parameterType="PaymentVO" resultMap="getMyPageOrderResult">
	  	select * from cart C
			join product P
			on C.product_id = P.product_id
			join productFile PF
			on P.product_id=PF.product_id
			join payment PM
	        on C.payment_id = PM.payment_id
	        join address A
        	on PM.address_id=A.address_id
				where PM.payment_id=#{payment_id}
  	</select><!-- 주문/배송 상세 조회 -->
  	
  	<update id="setCountUpdate" parameterType="CartVO">
  		update cart set cart_cnt=#{cart_cnt} where cart_id=#{cart_id}
  	</update> <!-- 장바구니 수량변경 -->
  	
  	<update id="setCheckAll" parameterType="CartVO">
  		update cart set cart_state=#{cart_state}
  		where member_id=#{member_id} and
			(cart_state = 'checked' or
			cart_state = 'unChecked')
  	</update> <!-- 장바구니 전체선택/선택해제 -->
  	
  	<update id="setCheckOne" parameterType="CartVO">
  		update cart set cart_state=#{cart_state}
  		where cart_id=#{cart_id}
  	</update> <!-- 장바구니 상품 선택 -->
  	
  	<update id="setPaymentID" parameterType="HashMap">
  		update cart set cart_state='payment'
  						, payment_id=#{payment.payment_id}
  		where cart_state=#{cart.cart_state}
  				and member_id=#{payment.member_id}
  	</update> <!-- 결제 후 cart 상태 변경 -->
  	
  	<update id="setPaymentDelivery" parameterType="PaymentVO">
  		update cart C join payment PM
			on C.payment_id = PM.payment_id
			set C.cart_state='delivery'
				where C.cart_state='payment' and
			  				PM.payment_id=#{payment_id} and
								DATEDIFF(now(), PM.payment_date) <![CDATA[>=]]> 1
  	</update> <!-- 결제 후 하루 뒤 배송중으로 장바구니 상태 변경 --> <!-- 환불 불가능 -->
  	
  	<update id="setPaymentDone" parameterType="PaymentVO">
  		update cart C join payment PM
			on C.payment_id = PM.payment_id
			set C.cart_state='done'
				where C.cart_state='delivery' and 
			  				PM.payment_id=#{payment_id} and
								DATEDIFF(now(), PM.payment_date) <![CDATA[>=]]> 3
  	</update> <!-- 배송시작 이틀 뒤(결제완료 시점 3일 뒤) 배송완료로 장바구니 상태 변경 --> <!-- 환불 가능 -->
  	
  	<update id="setPaymentCancel" parameterType="PaymentVO">
  		update cart set cart_state='cancel'
  		where cart_state='payment'
  				and payment_id=#{payment_id}
  	</update> <!-- 주문취소 후 장바구니 상태 변경 -->
  	
  	<update id="setPaymentRefund" parameterType="PaymentVO">
  		update cart set cart_state='refund'
  		where cart_state='done'
  				and payment_id=#{payment_id}
  	</update> <!-- 환불 후 장바구니 상태 변경 -->
  	
  	<delete id="setDirectPayment" parameterType="MemberVO">
  		delete from cart
  		where cart_state='direct'
  				and member_id=#{member_id}
  	</delete> <!-- 바로구매 cart_state 변경 -->
  	
  	<delete id="setDelete" parameterType="CartVO">
  		delete from cart where cart_id=#{cart_id}
  	</delete> <!-- 장바구니 물건 삭제 -->
</mapper>