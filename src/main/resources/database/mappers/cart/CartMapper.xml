<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.c.illy.cart.CartRepository">
	<insert id="setCart" parameterType="CartVO">
		insert into cart (cart_id, member_id, product_id, cart_cnt, cart_state)
		values (null, #{member_id}, #{product_id}, #{cart_cnt}, 'checked')
	</insert> <!-- 장바구니 담기 -->
	
	<insert id="setPaymentCart" parameterType="CartVO">
		insert into cart (cart_id, member_id, product_id, cart_cnt, cart_state)
		values (null, #{member_id}, #{product_id}, #{cart_cnt}, 'direct')
	</insert> <!-- 바로구매 담기 -->

	<select id="getNormalBasket" resultType="CartProductVO" parameterType="MemberVO">
	
		select C.*, P.*, PF.productFile_name from cart C
		join product P
			on C.product_id = P.product_id
        join productfile PF
        	on C.product_id = PF.product_id
		where C.member_id=#{member_id} and
				(C.cart_state = 'checked' or C.cart_state = 'unChecked')
		GROUP BY C.cart_id ORDER BY C.cart_id DESC
	</select> <!-- 일반배송 장바구니 리스트 -->
	
  	<select id="getCartListCheck" resultType="CartProductVO" parameterType="MemberVO">
  		select C.*, P.*, PF.productFile_name from cart C
		join product P
			on C.product_id = P.product_id
        join productfile PF
        	on C.product_id = PF.product_id
		where C.member_id=#{member_id} and
			  C.cart_state='checked'
		GROUP BY C.cart_id ORDER BY C.cart_id DESC
  	</select> <!-- 선택한 장바구니 리스트 --> <!-- 선택상품 주문 때 이용 -->
  	
  	<select id="getDirectPayment" resultType="CartProductVO" parameterType="MemberVO">
  		select C.*, P.*, PF.productFile_name from cart C
		join product P
			on C.product_id = P.product_id
        join productfile PF
        	on C.product_id = PF.product_id
		where C.member_id=#{member_id} and
			  C.cart_state='direct'
		GROUP BY C.cart_id ORDER BY C.cart_id DESC	  
  	</select> <!-- 바로구매 통한 구매상품 리스트 출력 -->
  	
  	<update id="setCountUpdate" parameterType="CartVO">
  		update cart set cart_cnt=#{cart_cnt} where cart_id=#{cart_id}
  	</update> <!-- 장바구니 수량변경 -->
  	
  	<update id="setCheckAll" parameterType="CartVO">
  		update cart set cart_state=#{cart_state}
  		where member_id=#{member_id} and
			(cart_state = 'checked' or
			cart_state = 'unChecked')
  	</update> <!-- 장바구니 전체선택/선택해제 -->
  	
  	<update id="setCheckOne" parameterType="CartVO">
  		update cart set cart_state=#{cart_state}
  		where cart_id=#{cart_id}
  	</update> <!-- 장바구니 상품 선택 -->
  	
  	<update id="setPaymentID" parameterType="HashMap">
  		update cart set cart_state='payment'
  						, payment_id=#{payment.payment_id}
  		where cart_state=#{cart.cart_state}
  				and member_id=#{payment.member_id}
  	</update> <!-- 결제 후 cart 상태 변경 -->
  	
  	<update id="setPaymentDelivery" parameterType="PaymentVO">
  		update cart C join payment PM
			on C.payment_id = PM.payment_id
			set C.cart_state='delivery'
				where C.cart_state='payment' and
			  				PM.payment_id=#{payment_id} and
								DATEDIFF(now(), PM.payment_date) <![CDATA[>=]]> 1
  	</update> <!-- 결제 후 하루 뒤 배송중으로 장바구니 상태 변경 --> <!-- 환불 불가능 -->
  	
  	<update id="setPaymentDone" parameterType="PaymentVO">
  		update cart C join payment PM
			on C.payment_id = PM.payment_id
			set C.cart_state='done'
				where C.cart_state='delivery' and 
			  				PM.payment_id=#{payment_id} and
								DATEDIFF(now(), PM.payment_date) <![CDATA[>=]]> 3
  	</update> <!-- 배송시작 이틀 뒤(결제완료 시점 3일 뒤) 배송완료로 장바구니 상태 변경 --> <!-- 환불 가능 -->
  	
  	<update id="setPaymentCancel" parameterType="PaymentVO">
  		update cart set cart_state='cancel'
  		where cart_state='payment'
  				and payment_id=#{payment_id}
  	</update> <!-- 주문취소 후 장바구니 상태 변경 -->
  	
  	<update id="setPaymentRefund" parameterType="PaymentVO">
  		update cart set cart_state='refund'
  		where cart_state='done'
  				and payment_id=#{payment_id}
  	</update> <!-- 환불 후 장바구니 상태 변경 -->
  	
  	<delete id="setDirectPayment" parameterType="MemberVO">
  		delete from cart
  		where cart_state='direct'
  				and member_id=#{member_id}
  	</delete> <!-- 바로구매 cart_state 변경 -->
  	
  	<delete id="setDelete" parameterType="CartVO">
  		delete from cart where cart_id=#{cart_id}
  	</delete> <!-- 장바구니 물건 삭제 -->
</mapper>