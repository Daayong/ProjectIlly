<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.c.illy.payment.PaymentRepository">
	<insert id="setPayment" parameterType="PaymentVO">
		insert into payment(payment_id, payment_comment, payment_use_point, payment_type, payment_total, 
							payment_date, payment_name, payment_delivery, payment_email, payment_phone, payment_product_total, member_id,
							payment_use_coupon, payment_total_discount, address_id, payment_add_point)
		values(null, #{payment_comment}, #{payment_use_point}, #{payment_type}, #{payment_total}, now(), 
				#{payment_name}, #{payment_delivery}, #{payment_email}, #{payment_phone}, #{payment_product_total}, #{member_id},
				#{payment_use_coupon}, #{payment_total_discount}, #{address_id}, #{payment_add_point})
	</insert> <!-- 결제하기 -->
	
	<select id="getPaymentOne" resultType="PaymentVO">
		select * from payment
			where payment_id=(select max(payment_id) from payment)
	</select> <!-- 마지막 결제 가져오기 -->
	
  	<select id="getPaymentCart" resultType="CartProductVO" parameterType="PaymentVO">
  		select * from cart C
		join product P
		on C.product_id = P.product_id
		where C.payment_id=#{payment_id}
  	</select> <!-- 결제완료 상품 List 출력 --> 
  	 	
  	<resultMap type="PaymentVO" id="getMyPageOrderResult">
		<id column="payment_id" property="payment_id"/>
		<result column="member_id" property="member_id" />
		<result column="address_id" property="address_id"/>
		<result column="payment_comment" property="payment_comment"/>
		<result column="payment_type" property="payment_type"/>
		<result column="payment_date" property="payment_date"/>
		<result column="payment_name" property="payment_name"/>
		<result column="payment_delivery" property="payment_delivery"/>
		<result column="payment_email" property="payment_email"/>
		<result column="payment_phone" property="payment_phone"/>
		<result column="payment_product_total" property="payment_product_total"/>
		<result column="payment_use_point" property="payment_use_point"/>
		<result column="payment_use_coupon" property="payment_use_coupon"/>
		<result column="payment_add_point" property="payment_add_point"/>
		<result column="payment_total_discount" property="payment_total_discount"/>
		<result column="payment_total" property="payment_total"/>
		<collection property="carts" javaType="List" ofType="CartProductVO">
			<id column="cart_id" property="cart_id"/>
			<result column="member_id" property="member_id"/>
			<result column="product_id" property="product_id"/>
			<result column="payment_id" property="payment_id"/>
			<result column="product_name" property="product_name"/>
			<result column="productFile_name" property="productFile_name"/>
			<result column="product_price" property="product_price"/>
			<result column="cart_state" property="cart_state"/>
			<result column="cart_review_state" property="cart_review_state"/>	
			<result column="cart_cnt" property="cart_cnt"/>
			<result column="product_categoryCode" property="product_categoryCode"/>
		</collection>
		<collection property="addressVO" javaType="AddressVO">
			<id column="address_id" property="address_id"/>
			<result column="address_name" property="address_name"/>
			<result column="address_recipient_name" property="address_recipient_name"/>
			<result column="address_recipient_phone" property="address_recipient_phone"/>
			<result column="address" property="address"/>
			<result column="address_postcode" property="address_postcode"/>
			<result column="main_address" property="main_address"/>
			<result column="address_reference" property="address_reference"/>
			<result column="address_detail" property="address_detail"/>
			<result column="address_default" property="address_default"/>
			<result column="address_myAddress" property="address_myAddress"/>
		</collection>
	</resultMap>
  	
 	<select id="getMyPageOrderPager" parameterType="HashMap" resultMap="getMyPageOrderResult">
	  	select C.*, P.*, MIN(PF.productFile_name) as productFile_name, PM.* from cart C
			join product P
			on C.product_id = P.product_id
			join productFile PF
			on P.product_id=PF.product_id
			join payment PM
	        on C.payment_id = PM.payment_id
	        join address A
        	on PM.address_id=A.address_id
				where PM.member_id=#{payment.member_id}
				and
				    DATE_FORMAT(PM.payment_date, '%Y-%m-%d') between #{payment.start_date} and #{payment.end_date}
				<if test="cart.cart_state == 'cancel'"> <!-- 취소/반품 list 조회 조건 -->
					and C.cart_state = 'cancel'
				</if>
				<if test="cart.cart_state == 'refund'"> <!-- 환불 list 조회 조건 -->
					and C.cart_state = 'refund'
				</if>
				GROUP BY C.cart_id
				order by PM.payment_date desc, C.cart_id desc limit #{pager.startRow},#{pager.perPage}
  	</select> <!-- 주문/배송 list 조회 (pager처리 위함) -->
  	
  	<select id="getMyPageOrderCount" parameterType="HashMap" resultType="Long">
		select count(*) from 
			(select C.cart_id from cart C
					join product P
					on C.product_id = P.product_id
					join productFile PF
					on P.product_id=PF.product_id
					join payment PM
			        on C.payment_id = PM.payment_id
			        join address A
		        	on PM.address_id=A.address_id
		            where PM.member_id=#{payment.member_id}
		        		and
						     DATE_FORMAT(PM.payment_date, '%Y-%m-%d') between #{payment.start_date} and #{payment.end_date}
						<if test="cart.cart_state == 'cancel'"> <!-- 취소/반품 list 조회 조건 -->
							and C.cart_state = 'cancel'
						</if>
		        		<if test="cart.cart_state == 'refund'"> <!-- 환불 list 조회 조건 -->
							and C.cart_state = 'refund'
						</if>
					GROUP BY C.cart_id
			) as count
  	</select> <!-- 주문/배송 list 조회 count(pager처리 위함) -->
  	
  	<select id="getMyPageTotalCount" parameterType="HashMap" resultType="Long">
  		select count(*) from (
	  		select PM.payment_id from payment PM
	  			join cart C on PM.payment_id=C.payment_id
					where PM.member_id=#{payment.member_id}
			        		and
							     DATE_FORMAT(PM.payment_date, '%Y-%m-%d') between #{payment.start_date} and #{payment.end_date}
							<if test="cart.cart_state == 'cancel'"> <!-- 취소/반품 list 조회 조건 -->
								and C.cart_state = 'cancel'
							</if>
			        		<if test="cart.cart_state == 'refund'"> <!-- 환불 list 조회 조건 -->
								and C.cart_state = 'refund'
							</if>
							group by PM.payment_id
			) as c
  	</select> <!-- 주문/배송 취소/환불 총 개수 -->
  	
  	<select id="getMyPageOrderDetail" parameterType="PaymentVO" resultMap="getMyPageOrderResult">
	  	select * from cart C
			join product P
			on C.product_id = P.product_id
			join productFile PF
			on P.product_id=PF.product_id
			join payment PM
	        on C.payment_id = PM.payment_id
	        join address A
        	on PM.address_id=A.address_id
				where PM.payment_id=#{payment_id}
			GROUP BY C.cart_id
			order by C.cart_id desc
  	</select><!-- 주문/배송 상세 조회 -->
  	
  	
  	<!-- 리뷰작성가능리스트 _다영 -->
  	<select id="myReviewList" parameterType="HashMap" resultMap="getMyPageOrderResult">
	  	select C.*, P.*, MIN(PF.productFile_name) as productFile_name, PM.* from cart C
			join product P
			on C.product_id = P.product_id
			join productFile PF
			on P.product_id=PF.product_id
			join payment PM
	        on C.payment_id = PM.payment_id
	       <!--  join address A
        	on PM.address_id=A.address_id -->
				where PM.member_id=#{payment.member_id}
				and 
					DATE_FORMAT(PM.payment_date, '%Y-%m-%d') between #{payment.start_date} and #{payment.end_date}
				and C.cart_state = 'done'
                and C.cart_review_state= #{cart.cart_review_state}
				GROUP BY C.cart_id
				order by PM.payment_date DESC, C.cart_id desc limit #{pager.startRow},#{pager.perPage}
  	</select> <!-- 주문/배송 list 조회 (pager처리 위함) -->
 
  	<select id="getMyReviewCount" parameterType="HashMap" resultType="Long">
  		select count(*) from (
	  		select PM.payment_id from payment PM
	  			join cart C on PM.payment_id=C.payment_id
					where PM.member_id=#{payment.member_id}
			        		and
							     DATE_FORMAT(PM.payment_date, '%Y-%m-%d') between #{payment.start_date} and #{payment.end_date}
							and C.cart_state ='done'
              			  	and C.cart_review_state=#{cart.cart_review_state}
							group by PM.payment_id
			) as c
  	</select> <!-- myReviewlist 조회 count(pager처리 위함) -->
  			
</mapper>