<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.c.illy.member.MemberRepository">

	<select id="getSelect" parameterType="MemberVO"
		resultType="MemberVO">
		SELECT * FROM member WHERE member_id = #{member_id}
	</select>
	
	<!--다영 추가 ID 뒤에 글자 *로 치환-->
	<select id="getSelectUsername" parameterType="MemberVO"
		resultType="MemberVO">
		SELECT RPAD(SUBSTR(username, 1, 2), LENGTH(username), '*') AS username from member WHERE member_id=#{member_id}  
	</select>

	<select id="usernameSelect" parameterType="MemberVO"
		resultType="MemberVO">
		SELECT * FROM member WHERE username = #{username}
	</select>

	<select id="find_username" parameterType="String"
		resultMap="getLoginResult">
		select *
		from Member M
		inner join
		member_role MR
		on M.username = MR.username
		inner join
		role R
		on MR.num = R.num
		WHERE M.username=#{username}
	</select>

	<insert id="setInsert" parameterType="MemberVO">
		insert into
		member(username, password, member_name, member_email,member_phone,
		member_birth, enabled, member_point) values (
		#{username},
		#{password},
		#{member_name},
		#{member_email},
		#{member_phone},
		#{member_birth},
		#{enabled},
		0);
	</insert> <!-- member_point 0으로 -->
	
<!-- ijy_point -->
	<insert id="setAddBean" parameterType="MemberVO">
		update member set member_point = #{member_point}
			where member_id = #{member_id}
	</insert> <!-- 결제 후 포인트 변경 -->
<!-- ijy_poin end -->


	<resultMap type="MemberVO" id="getLoginResult">
		<id column="member_id" property="member_id"/>
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="member_name" property="member_name" />
		<result column="member_email" property="member_email" />
		<result column="member_phone" property="member_phone" />
		<result column="member_birth" property="member_birth" />
		<result column="member_point" property="member_point" />
		<result column="enabled" property="enabled" />
		<collection property="roles" javaType="List"
			ofType="RoleVO">
			<result column="num" property="num" />
			<result column="roleName" property="roleName" />
		</collection>
	</resultMap>

	<insert id="setMemberRoleInsert" parameterType="java.util.Map">
		insert into
		member_role(username,num) values(
		#{username}, #{num}
		)
	</insert>
	
	<select id="find_id" parameterType="MemberVO" resultType="MemberVO">
		<choose>
		<when test="member_email == null">
			select username from member where member_name = #{member_name} and member_phone = #{member_phone}
		</when>
		<when test="member_phone == null">
			select username from member where member_name = #{member_name} and member_email = #{member_email}
		</when>
		</choose>
	</select>
	
	<select id="find_pw" parameterType="MemberVO" resultType="MemberVO">
		select * from member where username = #{username}
	</select>
	
	<update id="update_member" parameterType="AddressVO" >
		update member M inner join address A on M.member_id = A.member_id set
		password = #{password},
		member_email = #{member_email},
		member_phone = #{member_phone},
		address = #{main_address},
		address_reference = #{address_reference},
		address_detail = #{address_detail},
		address_postcode = #{address_postcode},
		where address_id = (select min(address_id) from member_id = #{member_id})
	</update>
	
	<delete id="delete_member" parameterType="MemberVO">
		delete from member where member_id = #{member_id}
	</delete>
	
	<update id="change_password" parameterType="String">
		update member
		set password = #{new_password} 
		where password = #{old_password}
	</update>
</mapper>